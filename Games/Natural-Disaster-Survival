local Services = setmetatable({}, {__index = function(Self, Index)
	return game:GetService(Index)
end})
local Players = Services.Players
local RunService = Services.RunService
local Workspace = Services.Workspace
local Player = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local wait = task.wait
local spawn = task.spawn

local Client = {
    ControlModule = require(Player.PlayerScripts.PlayerModule.ControlModule),
}
Client.Float = function()
    if Player.Character then
        for i,v in next, Player.Character:GetChildren() do
            if v:IsA("BasePart") then
                v.CanCollide = false
                v.Velocity = Vector3.new(0,0,0)
            end
        end
    end
end

Client.Touch = function()
    if Player.Character then
        for i,v in next, Player.Character:GetChildren() do
            if v:IsA("BasePart") and v.CanTouch then
                v.CanTouch = false                
            end
        end
    end
end
Client.new = function()
    if Player and Player.Character and Player.Character:FindFirstChild("Humanoid") then
        Player.Character.Humanoid.RootPart.CFrame = CFrame.new(Vector3.new(-282, 168, 341))
    end
end

Client.Disaster = function()
    return Player.Character and Player.Character:FindFirstChild("SurvivalTag") and Player.Character.SurvivalTag.Value
end

Client.FallDamage = function()
    return Player.Character:FindFirstChild("FallDamageScript")
end
Client.ResetPlayer = function()
    if Player.Character and Player.Character:FindFirstChild("Head") then
        Player.Character.Head:Destroy()
    end
end

Client.Fly = function()
    local New = Camera.CFrame:VectorToWorldSpace(Client.ControlModule:GetMoveVector())
	local Old = Player.Character.HumanoidRootPart.CFrame.Position
	local NewPosition = Old + (New * WalkSpeedValue * RunService.Heartbeat:Wait())
	local LookDirection = Camera.CFrame.LookVector
	Player.Character.HumanoidRootPart.CFrame = CFrame.new(NewPosition, NewPosition + Vector3.new(LookDirection.X, 0, LookDirection.Z))
end
RunService.Stepped:Connect(function()
    if AutoFarm then
        Client.new()
        Client.Float()
    end
    if FallDamage then
        Client.Touch()
    end
    if Fly then
        Client.Fly()
    end
end)

local Atlas = loadstring(game:HttpGet("https://raw.githubusercontent.com/JixSo-48/CodeNest/refs/heads/main/UI/Atlas_UI_Library"))()
local UI = Atlas.new({
    Name = "CodeNest: " .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name;
    ConfigFolder = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name;
    Credit = "DekuDimz Script developer | UI Made By RoadToGlory#9879"; -- text to appear if player presses the "i" button on their UI (optional)
    Color = Color3.fromRGB(255,0,0); -- theme color for UI (required)
    Bind = "Delete"; -- keybind for toggling the UI, must be a valid KeyCode name
    -- Atlas Loader:
    UseLoader = false; -- whether to use Atlas Loader or not, if set to false than CheckKey and Discord are ignored
    FullName = "CodeNest"; -- works if UseLoader is set to true, can be same as Name argument, shown on loader frame
    CheckKey = function(inputtedKey) -- works if UseLoader is set to true, where inputtedKey is the key inputted by the player
        return true
    end;
    Discord = ""; -- works if UseLoader is set to true, will be copied to clipboard if player presses "Copy Invite" button
})

local Basic = UI:CreatePage("Misc")
local Misc = Basic:CreateSection("Features")

local Destroyer = UI:CreatePage("Destroy GUI")
local Destroy = Destroyer:CreateSection("Gui")


local Yes = Misc:CreateParagraph("Disaster: ")

RunService.Stepped:Connect(function()
    Yes.Set("Disaster: " .. tostring(Client.Disaster()))
end)

Misc:CreateToggle({Name = "Auto Win"; Flag = "sdkjfhksdfhjjsdfhkjnnnn"; Default = false;
	Callback = function(Value)
		AutoFarm = Value
	end;
	Warning = "";
	WarningIcon = 12345; 
    CallbackOnCreation = true;
})

Misc:CreateToggle({Name = "Anti Fall Damage"; Flag = "sdkjfhk4sdfhjjsdfhkjnnnn"; Default = false;
	Callback = function(Value)
		FallDamage = Value
	end;
	Warning = "";
	WarningIcon = 12345; 
    CallbackOnCreation = true;
})

Misc:CreateButton({
	Name = "Reset Player"; -- required: name of element
	Callback = function()  -- required: function to be called when button is pressed
		Client.ResetPlayer()
	end
})

Misc:CreateSliderToggle({Name = "FlyHax"; SliderFlag = "sdfjsdhfjfs"; ToggleFlag = "Toggle";Min = 1;Max = 200;AllowOutOfRange = true;Digits = 2;SliderDefault = 5;ToggleDefault = false;
	SliderCallback = function(newValue)
		WalkSpeedValue = newValue
	end;
	ToggleCallback = function(newValue) 
		Fly = newValue
	end;
	Warning = "This has a warning";
	WarningIcon = 12345;
	CallbackOnCreation = true;
})

Destroy:CreateButton({
	Name = "Destroy?"; -- required: name of element
	Callback = function()  -- required: function to be called when button is pressed
		UI:Destroy()
	end
})
