local Services = setmetatable({}, {__index = function(Self, Service)
    return game:GetService(Service)
end})
local ReplicatedStorage = Services.ReplicatedStorage
local Players = Services.Players
local RunService = Services.RunService
local Workspace = Services.Workspace
local ScriptContext = Services.ScriptContext
local LogService = Services.LogService
local Player = Players.LocalPlayer

local Client = {}
Client.GetMob = function()
    local Mobs = Workspace.Enemies
    local Target = nil
    local Distance = math.huge
    for i,v in next, Mobs:GetChildren() do
        if v:IsA("Model") and v:FindFirstChild("Humanoid") then
            local Mag = (Player.Character.Humanoid.RootPart.Position - v.Humanoid.RootPart.Position).magnitude
            if Mag < Distance then
                Distance = Mag
                Target = v
            end
        end 
    end
    return Target
end

local OldNameCall
OldNameCall = hookmetamethod(game, "__namecall", function(...)
    local Self = ...
    local Args = {...}
    if Self.Name == "CommE" then
        if getnamecallmethod() == "FireServer" then
            if Args[2] == "Dodge" and InfiniteDash then
                return
            end
        end
    end
    return OldNameCall(...)
end)

local Atlas = loadstring(game:HttpGet("https://raw.githubusercontent.com/JixSo-48/CodeNest/refs/heads/main/UI/Atlas_UI_Library"))()
local UI = Atlas.new({
    Name = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name;
    ConfigFolder = "Jailbreak";
    Credit = "DekuDimz Script developer | UI Made By RoadToGlory#9879"; -- text to appear if player presses the "i" button on their UI (optional)
    Color = Color3.fromRGB(255,0,0); -- theme color for UI (required)
    Bind = "Delete"; -- keybind for toggling the UI, must be a valid KeyCode name
    -- Atlas Loader:
    UseLoader = false; -- whether to use Atlas Loader or not, if set to false than CheckKey and Discord are ignored
    FullName = "CodeNest"; -- works if UseLoader is set to true, can be same as Name argument, shown on loader frame
    CheckKey = function(inputtedKey) -- works if UseLoader is set to true, where inputtedKey is the key inputted by the player
        return true
    end;
    Discord = ""; -- works if UseLoader is set to true, will be copied to clipboard if player presses "Copy Invite" button
})

local AutoFarm = UI:CreatePage("AutoFarms")
local Kill = AutoFarm:CreateSection("Kill")

Kill:CreateToggle({
    Name = "Kill Aura";
    Flag = "KillAura";
    Default = false;
    Callback = function(Value)
        KillAura = Value
    end;
    Warning = "";
    WarningIcon = 12345;
    CallbackOnCreation = true;
})


local NoTick = tick()
local Tick5 = tick()
local Tick1 = tick()

spawn(function()
    while wait() do
        local A, B = pcall(function()
            if tick() - NoTick >= 0 then
                if KillAura then
                    game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack"):FireServer(0.5)
                    game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit"):FireServer(Client.GetMob().Humanoid.RootPart, {})
                end
            end
        end)
        if not A then
            print(B)
        end
    end
end)
