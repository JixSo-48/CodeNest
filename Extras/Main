local CodeNest = {}
local Global = {}

for i,v in next, game.GetChildren(game) do -- Globalize all Services to make scripting easier
    Global[v.ClassName] = cloneref(v)
end

Global.Player = Global.Players.LocalPlayer
CodeNest.Player = Global.Player

getgenv().C = CodeNest
function CodeNest.GetCharacter()
    return Global.Player.Character
end

function CodeNest.GetHumanoid()
    return Global.Player.Character and Global.Player.Character.FindFirstChild(Global.Player.Character, "Humanoid")
end

function CodeNest.IsLoaded()
    return game:IsLoaded() and CodeNest.Loaded
end

function CodeNest.GetPlayers()
    return Global.Players.GetPlayers(Global.Players)
end

function CodeNest.Mag(P1, P2)
    return (P1.Position - P2.Position).magnitude
end

function CodeNest.WalkTo(Position)
    CodeNest.GetHumanoid():MoveTo(Position)
end

function CodeNest.CreatePath(Model, Position, Table)
    if Model and Position and Table then
        local Travel = Global.PathfindingService:CreatePath(Table or {})
        Travel:ComputeAsync(Model.PrimaryPart.Position, Position)
        return Travel:GetWaypoints()
    end
end

function CodeNest.PathWalkTo(Model, Position, Table)
    local Way = CodeNest:CreatePath(Model, Position, Table)
    for i,v in next, Way do
        CodeNest:GetHumanoid():MoveTo(v.Position)
        CodeNest:GetHumanoid().MoveToFinished:Wait()
    end
end

function CodeNest.Teleport(Model, Position)
    Model.PrimaryPart.CFrame = CFrame.new(Vector3.new(Position))
end

function CodeNest.PlayerTeleport(Position, offset)
    if offset == nil then offset = CFrame.new(0,0,0) end
    Global.Player.Character.PrimaryPart.CFrame = Position * offset
end

function CodeNest.Rejoin()
    Global.TeleportService:Teleport(game.PlaceId)
end

function CodeNest.ServerHop()
    spawn(function()
        while wait(4) do
            local Gay = Global.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. game.PlaceId .. '/servers/Public?sortOrder=Asc&limit=100'))
            for i,v in next, Gay.data do
                if v.playing and v.playing < v.maxPlayers then
                    Global.TeleportService:TeleportToPlaceInstance(game.PlaceId, v.id)
                    break
                end
            end
        end
    end)    
end
function CodeNest.NoClip()
    for i,v in next, Player.Character:GetChildren() do
        if v:IsA("BasePart") then
            if v.CanCollide then
                v.CanCollide = false
            end
        end
    end
end

function CodeNest.Float()
    for i,v in next, Player.Character:GetChildren() do
        if v:IsA("BasePart") then
            v.Velocity = Vector3.new(0,0,0)
        end
    end
end

function CodeNest.GetTool(Name)
    if Player.Backpack:FindFirstChild(Name, true) then
        Player.Character:WaitForChild("Humanoid"):EquipTool(Player.Backpack:FindFirstChild(Name, true))
    end
end

function CodeNest.FindFirstChild(Parent, Child)
    return Parent:FindFirstChild(Child) 
end

function CodeNest.GetDescendants(Parent)
    return Parent:GetDescendants()
end

function CodeNest.WalkSpeed(Speed)
    local OldNameCall = nil
    OldNameCall = hookmetamethod(game, "__newindex", function(A, B, C)
        if A and B == "WalkSpeed" then
            return Speed
        end
        return OldNameCall(A, B, C)
    end)
    sethiddenproperty(CodeNest.GetHumanoid(), "WalkSpeed", Speed)
end


function CodeNest.JumpPowerHeight()
    if CodeNest.GetHumanoid().JumpHeight then
        return "JumpHeight"
    else
        return "JumpPower"
    end
end

function CodeNest.JumpPower(Height)
    local I = CodeNest.JumpPowerHeight()
    local OldNameCall = nil
    OldNameCall = hookmetamethod(game, "__newindex", function(A, B, C)
        if A and B == I then
            return Height
        end
        return OldNameCall(A, B, C)
    end)
    sethiddenproperty(CodeNest.GetHumanoid(), CodeNest.JumpPowerHeight(), Height)
end


function CodeNest.Fly(Toggle, Speed)
    getgenv().Flying = Toggle
    if Toggle then
        local Max = 0
        local LP = Global.Players.LocalPlayer
        local Mouse = LP:GetMouse()
        Max = Max + 1
        if Toggle then
            local T = LP.Character:FindFirstChild("UpperTorso",true) or LP.Character:FindFirstChild("HumanoidRootPart",true)
            local S = {
                F = 0,
                B = 0,
                L = 0,
                R = 0
            }
            local S2 = {
                F = 0,
                B = 0,
                L = 0,
                R = 0
            }
            local SPEED = 5
            local function FLY()
                local BodyGyro = Instance.new("BodyGyro", T)
                local BodyVelocity = Instance.new("BodyVelocity", T)
                BodyGyro.P = 9e4
                BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                BodyGyro.cframe = T.CFrame
                BodyVelocity.velocity = Vector3.new(0, 0, 0)
                BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                spawn(function()
                    repeat wait()
                        if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                            SPEED = Speed
                        elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                            SPEED = 0
                        end
                        if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                            BodyVelocity.velocity =
                                ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                ((Workspace.CurrentCamera.CoordinateFrame *
                                CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                Workspace.CurrentCamera.CoordinateFrame.p)) *
                                SPEED
                            S2 = {
                                F = S.F,
                                B = S.B,
                                L = S.L,
                                R = S.R
                            }
                        elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                            BodyVelocity.velocity =
                                ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                ((Workspace.CurrentCamera.CoordinateFrame *
                                CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                Workspace.CurrentCamera.CoordinateFrame.p)) *
                                SPEED
                        else
                            BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                        end
                        BodyGyro.cframe = Workspace.CurrentCamera.CoordinateFrame
                    until not Toggle or not Flying
                    S = {
                        F = 0,
                        B = 0,
                        L = 0,
                        R = 0
                    }
                    S2 = {
                        F = 0,
                        B = 0,
                        L = 0,
                        R = 0
                    }
                    SPEED = 0
                    BodyGyro:destroy()
                    BodyVelocity:destroy()
                end
                )
            end
            Mouse.KeyDown:connect(
                function(k)
                    if k:lower() == "w" then
                        S.F = 1
                    elseif k:lower() == "s" then
                        S.B = -1
                    elseif k:lower() == "a" then
                        S.L = -1
                    elseif k:lower() == "d" then
                        S.R = 1
                    end
                end
            )
            Mouse.KeyUp:connect(
                function(k)
                    if k:lower() == "w" then
                        S.F = 0
                    elseif k:lower() == "s" then
                        S.B = 0
                    elseif k:lower() == "a" then
                        S.L = 0
                    elseif k:lower() == "d" then
                        S.R = 0
                    end
                end
            )
            FLY()
            if Max == 2 then
                Max = 0
            end
        end
    end
end
return CodeNest
