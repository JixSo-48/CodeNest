local ESP = {}
ESP.Drawings = {}

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local playerCharacter = Player.Character or Player.CharacterAdded:Wait()


function ESP:GetTeamColor(player)
    if player ~= Player then
        return player.TeamColor.Color
    else
        return Color3.fromRGB(255, 255, 255)
    end
end

function ESP:AddObject(object)
    local box = Drawing.new("Square")
    local text = Drawing.new("Text")
    local healthText = Drawing.new("Text")
    local tracer = Drawing.new("Line")

    box.Filled = false
    box.Thickness = 2
    box.Color = self:GetTeamColor(object)
    text.Color = Color3.fromRGB(255, 255, 255)
    text.Size = 16
    healthText.Color = Color3.fromRGB(255, 255, 0)
    healthText.Size = 14
    tracer.Thickness = 2
    tracer.Color = Color3.fromRGB(0, 255, 0)

    self.Drawings[object] = { Box = box, Text = text, HealthText = healthText, Tracer = tracer }
end

function ESP:UpdateObject(object, playerPosition)
    if not self.Drawings[object] then return end

    local box = self.Drawings[object].Box
    local text = self.Drawings[object].Text
    local healthText = self.Drawings[object].HealthText
    local tracer = self.Drawings[object].Tracer

    local screenPos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(object.Position)

    if onScreen then
        box.Position = Vector2.new(screenPos.X - 50, screenPos.Y - 50)
        box.Size = Vector2.new(100, 100)
        box.Visible = true

        local distance = (playerPosition - object.Position).magnitude
        text.Position = Vector2.new(screenPos.X, screenPos.Y - 60)
        text.Text = string.format("%s (%.1f)", object.Name, distance)
        text.Visible = true

        if object:IsA("Model") and object:FindFirstChild("Humanoid") then
            local humanoid = object.Humanoid
            local health = humanoid.Health
            local maxHealth = humanoid.MaxHealth
            healthText.Position = Vector2.new(screenPos.X, screenPos.Y - 80)
            healthText.Text = string.format("Health: %.0f / %.0f", health, maxHealth)
            healthText.Visible = true
        else
            healthText.Visible = false
        end

        local playerScreenPos, playerOnScreen = workspace.CurrentCamera:WorldToScreenPoint(playerPosition)
        if playerOnScreen then
            tracer.From = Vector2.new(playerScreenPos.X, playerScreenPos.Y)
            tracer.To = Vector2.new(screenPos.X, screenPos.Y)
            tracer.Visible = true
        else
            tracer.Visible = false
        end
    else
        box.Visible = false
        text.Visible = false
        healthText.Visible = false
        tracer.Visible = false
    end
end

function ESP:RemoveObject(object)
    if self.Drawings[object] then
        self.Drawings[object].Box:Remove()
        self.Drawings[object].Text:Remove()
        self.Drawings[object].HealthText:Remove()
        self.Drawings[object].Tracer:Remove()
        self.Drawings[object] = nil
    end
end

function ESP:Toggle(state)
    for _, drawing in pairs(self.Drawings) do
        drawing.Box.Visible = state
        drawing.Text.Visible = state
        drawing.HealthText.Visible = state
        drawing.Tracer.Visible = state
    end
end

function ESP:AddESPToAllPlayers()
    for _, v in pairs(Players:GetPlayers()) do
        if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
            self:AddObject(v)
        end
    end
end

function ESP:Update()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= Player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
            self:UpdateObject(v, v.Character.HumanoidRootPart.Position)
        end
    end
end
return ESP
